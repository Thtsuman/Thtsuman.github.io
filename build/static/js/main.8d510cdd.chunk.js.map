{"version":3,"sources":["components/SplashScreen/SplashScreen.jsx","App.jsx","index.js"],"names":["textArray","config","mass","tension","friction","SplashScreen","useState","splashDone","setSplashDone","splashScreenContainer","setSplashScreenContainer","firstAnim","from","marginTop","to","secondAnim","opacity","trail","useTrail","length","onRest","delay","x","height","style","display","props","className","map","index","rest","div","key","App","ReactDOM","render","document","getElementById"],"mappings":"8QAKMA,G,MAAY,CAAC,WAAY,YAAa,aACtCC,EAAS,CAAEC,KAAM,GAAIC,QAAS,IAAMC,SAAU,KA8DrCC,EA5DM,WAAO,IAAD,EACUC,oBAAS,GADnB,mBACnBC,EADmB,KACPC,EADO,OAEgCF,mBAAS,IAFzC,mBAEnBG,EAFmB,KAEIC,EAFJ,KAIpBC,EAAY,CACjBC,KAAM,CAAEC,UAAW,KACnBC,GAAI,CAAED,UAAW,IAGZE,EAAa,CAClBH,KAAM,CAAEC,UAAW,EAAGG,QAAS,GAC/BF,GAAI,CAAED,WAAY,IAAKG,QAAS,IAG3BC,EAAQC,YAASlB,EAAUmB,OAAQ,CACxCC,OAAQ,kBAAMZ,GAAc,IAC5Ba,MAAO,GACPpB,SACAa,GAAI,CACHE,QAAS,EACTM,EAAG,EACHC,OAAQ,IAETX,KAAM,CAAEI,QAAS,EAAGM,GAAI,GAAIC,OAAQ,KAWrC,OACC,yBAAKC,MAAOf,GACX,kBAAC,SAAD,CACCG,KAAML,EAAaQ,EAAWH,KAAOD,EAAUC,KAC/CE,GAAIP,EAAaQ,EAAWD,GAAKH,EAAUG,GAC3CO,MAAO,GACPD,OAdmB,WACjBb,GACHG,EAAyB,CACxBe,QAAS,YAaR,SAACC,GAAD,OACA,yBAAKF,MAAOE,GACX,yBAAKC,UAAU,uBACd,yBAAKA,UAAU,qBACbV,EAAMW,KAAI,WAAyBC,GAAzB,EAAGP,EAAH,IAAMC,EAAN,EAAMA,OAAWO,EAAjB,qCACV,kBAAC,IAASC,IAAV,CAAcC,IAAKhC,EAAU6B,GAAQF,UAAU,cAAcH,MAAK,eAAOM,IACxE,kBAAC,IAASC,IAAV,CAAcP,MAAO,CAAED,WAAWvB,EAAU6B,gBCjDvCI,EAJH,WACX,OAAO,kBAAC,EAAD,OCCRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8d510cdd.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { animated, useTrail } from \"react-spring\"\nimport { Spring } from \"react-spring/renderprops\"\nimport \"./splashScreen.style.css\"\n\nconst textArray = [\"Designer\", \"Developer\", \"Cardist!\"]\nconst config = { mass: 20, tension: 2000, friction: 200 }\n\nconst SplashScreen = () => {\n\tconst [splashDone, setSplashDone] = useState(false)\n\tconst [splashScreenContainer, setSplashScreenContainer] = useState({})\n\n\tconst firstAnim = {\n\t\tfrom: { marginTop: 300 },\n\t\tto: { marginTop: 0 },\n\t}\n\n\tconst secondAnim = {\n\t\tfrom: { marginTop: 0, opacity: 1 },\n\t\tto: { marginTop: -200, opacity: 0 },\n\t}\n\n\tconst trail = useTrail(textArray.length, {\n\t\tonRest: () => setSplashDone(true),\n\t\tdelay: 50,\n\t\tconfig,\n\t\tto: {\n\t\t\topacity: 1,\n\t\t\tx: 0,\n\t\t\theight: 27,\n\t\t},\n\t\tfrom: { opacity: 0, x: -10, height: 0 },\n\t})\n\n\tconst handleDisplay = () => {\n\t\tif (splashDone) {\n\t\t\tsetSplashScreenContainer({\n\t\t\t\tdisplay: \"none\",\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<div style={splashScreenContainer}>\n\t\t\t<Spring\n\t\t\t\tfrom={splashDone ? secondAnim.from : firstAnim.from}\n\t\t\t\tto={splashDone ? secondAnim.to : firstAnim.to}\n\t\t\t\tdelay={50}\n\t\t\t\tonRest={handleDisplay}\n\t\t\t>\n\t\t\t\t{(props) => (\n\t\t\t\t\t<div style={props}>\n\t\t\t\t\t\t<div className=\"splashScreen-custom\">\n\t\t\t\t\t\t\t<div className=\"splashScreen-text\">\n\t\t\t\t\t\t\t\t{trail.map(({ x, height, ...rest }, index) => (\n\t\t\t\t\t\t\t\t\t<animated.div key={textArray[index]} className=\"trails-text\" style={{ ...rest }}>\n\t\t\t\t\t\t\t\t\t\t<animated.div style={{ height }}>{textArray[index]}</animated.div>\n\t\t\t\t\t\t\t\t\t</animated.div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Spring>\n\t\t</div>\n\t)\n}\n\nexport default SplashScreen\n","import React from \"react\"\nimport SplashScreen from \"./components/SplashScreen/SplashScreen\"\n\nconst App = () => {\n\treturn <SplashScreen />\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./main.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}